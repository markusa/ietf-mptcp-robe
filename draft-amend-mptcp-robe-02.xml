<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC0793 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.0793.xml">
<!ENTITY RFC6824 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6824.xml">
<!ENTITY I-D.ietf-mptcp-rfc6824bis SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-mptcp-rfc6824bis-18.xml">
]>
<rfc submissionType="IETF" docName="draft-amend-mptcp-robe-01" category="exp">
  <?rfc compact="yes"?>
  <?rfc text-list-symbols="o*+-"?>
  <?rfc subcompact="no"?>
  <?rfc sortrefs="yes"?>
  <?rfc symrefs="yes"?>
  <?rfc strict="yes"?>
  <?rfc toc="yes"?>
  <front>
    <title abbrev="MPTCP RobE">Multipath TCP Extension for Robust Session Establishment</title>
    <author fullname="Markus Amend" initials="M." surname="Amend">
      <organization>Deutsche Telekom</organization>
      <address>
        <postal>
          <street>T-Online-Allee 7</street>
          <street>64295 Darmstadt</street>
          <street>Germany</street>
        </postal>
        <email>Markus.Amend@telekom.de</email>
      </address>
    </author>
	<author fullname="Jiao Kang" initials="J." surname="Kang">
      <organization>Huawei</organization>
      <address>
        <postal>
          <street>D2-03,Huawei Industrial Base</street>
          <street>Longgang District</street>
		  <street>Shenzhen</street>
          <street>China</street>
        </postal>
        <email>kangjiao@huawei.com</email>
      </address>
    </author>
    <date day="4" month="November" year="2019"/>
    <workgroup>Multipath TCP Working Group</workgroup>
    <abstract>
      <t>
   Multipath TCP extends the plain, single-path limited, TCP towards the capability of multipath transmission. This greatly improves the reliability and performance of TCP communication. For backwards compatibility reasons the Multipath TCP was designed to setup successfully an initial path first, after which subsequent paths can be added for multipath transmission. For that reason the Multipath TCP has the same limitations as the plain TCP during connection setup, in case the selected path is not functional.</t>
      <t>
   This document proposes a set of implementations and their combinations that provide a more Robust Establishment (RobE) of MPTCP sessions. It includes RobE_TIMER, RobE_SIM, RobE_eSIM and RobE_IPS.</t>
      <t>
   RobE_TIMER is designed to stay close to MPTCP in that standard functionality is used wherever possible. Resiliency against network outages is achieved by modifying the SYN retransmission timer: If one path is defective, another path is used.</t>
      <t>
   RobE_SIM and RobE_eSIM provides the ability to simultaneously use multiple paths for connection setup. They ensure connectivity if at least one functional path out of a bunch of paths is given and offers beside that the opportunity to significantly improve loading times of Internet services.</t>
      <t>
   RobE_IPS provides a heuristic to select properly an initial path for connection establishment with a remote host based on empirical data derived from previous connection information.</t>
      <t>
   In practice, these independent solutions can be complementary used. This document also presents the design and protocol procedure for those combinations in addition to the respective stand-alone solutions.</t>  
    </abstract>
  </front>
  <middle>
    <section title="Introduction" anchor="introduction">
      <t>
   Multipath TCP Robust Session Establishment (MPTCP RobE) is a set of extensions to regular MPTCP <xref target="RFC6824"/> and its next upcoming version <xref target="I-D.ietf-mptcp-rfc6824bis"/>, which releases single path limitations during the initial connection setup.  Several scenarios require and benefit from a reliable and in time connection setup which is not covered by <xref target="RFC6824"/> and <xref target="I-D.ietf-mptcp-rfc6824bis"/> so far.  MPTCP was designed to be compliant with the TCP standard <xref target="RFC0793"/> and introduced therefore the concept of an initial TCP flow while adding subsequent flows after successful multipath negotiation on the initial path.  While fulfilling its purpose, MPTCP is however fully dependent on the transmission characteristics of the communication link selected for initiating MPTCP.</t>
      <t>
	      Multipath TCP itself enables hosts to exchange packets belonging to a single connection over several paths. Implemented in mobile phones (UEs), these paths are usually assigned to different network interfaces within the UE and corresponds to different networks such as cellular and WiFi. The path or network interface for initiating the initial subflow setup is most often provided by the operation system of the UE. For example, if LTE and WiFi are present in a mobile phone, WiFi is usually the interface offered to initiate the MPTCP session.</t>
      <t>
   This design falls short in situations where the default path does not provide the best performance compared to other available paths. In a worst case the default path is not even capable of setting up the initial flow letting any other functional path unused. For example, if the WiFi signal is weak, broken or cannot forward traffic to the destination, the establishment of the subflow will be delayed or impossible. This in turn, leads to a longer startup delay or no communication at all for services using MPTCP even if other functional paths are available. Even in scenarios where all paths are functional but services would benefit from a setup over the path with the lowest latency, MPTCP has no mean to support this demand.</t>
      <t>
   It can be concluded, that sequential path establishment relying with an initial path establishment over an external given default route will result in experience reduction when using MPTCP. So this document proposes solutions to overcome the aforementioned limitations and provides a more robust connection setup compared to traditional MPTCP.</t>
      <t>
   RobE_SIM and RobE_eSIM aims to overcome the limitations of <xref target="RFC6824"/> and <xref target="I-D.ietf-mptcp-rfc6824bis"/>,using one initial flow and introduces the concept of potential initial flows triggered simultaneously.  Potential initial flows gives the freedom to use more than one path to request multipath capability and select the initial flow at a later point.  RobE_SIM is a break-before-make mechanism, guaranteeing at least the robust connection establishment, however the RobE_eSIM reuses every potential initial flow request to combine it with less overhead and accelerated multipath availability, leveraging a new MPTCP option MP_JOIN_CAP. From a standardization perspective, the RobE_SIM is fully compliant with <xref target="RFC6824"/> and <xref target="I-D.ietf-mptcp-rfc6824bis"/> and is herein more of a descriptive and procedural nature. The RobE_eSIM requires a new MPTCP option but with the potential to significantly improve the MPTCP experience.</t>
      <t>
	      For the limitation of the default initial path, RobE_IPS makes no changes to standard MPTCP procedure and improves the performance of connection establishment by introducing an initial path selection strategy and required algorithms. The input for strategy and algorithms is the transmission status information which represents the transmission performance of each available path or network interface. The transmission status information is characterized by at least one of the parameters: signal strength, throughput, round-trip time (RTT) and link success rate. In this way, a path with better transmission performance can be learned and determined and the repsective network interface can be used for connection establishment.</t>
<t>
	The most simple approach for a robust MPTCP session establishment is RobE_TIMER, iterating the process of initial path establishment over all available paths, if the previous try has failed. Triggering a new try on a next path is depending on an expiration timer, preferably re-use TCP's in-built expiration timer.</t>
   
      <t><xref target="table_robe_features"/> summarizes the impact of RobE_TIMER, RobE_SIM, RobE_eSIM and RobE_IPS compared to <xref target="RFC6824"/> and <xref target="I-D.ietf-mptcp-rfc6824bis"/>.</t>
	  
      <texttable style="all" title="Overview RobE features during initial connection setup" anchor="table_robe_features">
        <ttcol>Scenario</ttcol>
        <ttcol>MPTCP</ttcol>
        <ttcol>RobE_TIMER</ttcol>
        <ttcol>RobE_SIM</ttcol>
		<ttcol>RobE_eSIM</ttcol>
		<ttcol>RobE_IPS</ttcol>
        <c>IP packet loss</c>
        <c>Delayed connection</c>
        <c>In the scope of timer</c>
        <c>No impact</c>
        <c>No impact</c>
		<c>Delayed connection</c>
        <c>IP broken</c>
        <c>No connection</c>
        <c>In the scope of timer</c>
        <c>No impact</c>
        <c>No impact</c>
		<c>No connection</c>
        <c>IP setup duration dependency</c>
        <c>Default route</c>
		<c>Default route (+ path 1..n)</c>
        <c>Fastest path</c>
		<c>Fastest path</c>
		<c>Selected path</c>
        <c>MP availability duration</c>
        <c>MP_CAPABLE HS + MP_JOIN HS</c>
		<c>sum_1..n(MP_CAPABLE_n HS) + MP_JOIN HS</c>
		<c>MP_CAPABLE HS + MP_JOIN HS</c>
        <c>max(MP_CAPABLE_1 .. MP_CAPABLE_n HS)</c>
		<c>MP_CAPABLE HS + MP_JOIN HS</c>
		<c>Guaranteeing session setup</c>
		<c>Depends on the default route</c>
		<c>Yes</c>
		<c>Yes</c>
		<c>Yes</c>
		<c>Depends on selection</c>
        <postamble>IP: Initial Path; MP: Multi-Path; HS: Handshake</postamble>
      </texttable>
      <section title="Terminology" anchor="terminology">
        <t>
This document makes use of a number of terms that are either MPTCP-specific or have defined meaning in the context of MPTCP, as follows:
<list style="empty"><t>
Path:  A sequence of links between a sender and a receiver, defined
      in this context by a 4-tuple of source and destination address/port pairs.
</t><t>
Subflow:  A flow of TCP segments operating over an individual path,
      which forms part of a larger MPTCP connection.  A subflow is
      started and terminated similar to a regular TCP connection.
</t></list>
</t>
      </section>      
    </section>
    <section title="Implementation without MPTCP protocol adaptation" anchor="unilateral_impl">
	    <t> RobE_TIMER, RobE_SIM and RobE_IPS are compatible with the current MPTCP protocol, <xref target="RFC6824"/> and <xref target="I-D.ietf-mptcp-rfc6824bis"/> but may be lack of the full optimization potential which require protocol adaptation in <xref target="bi_impl"/>. Following sections will describe them in detail.</t>
      <section title="Re-transmission Timer(RobE_TIMER)" anchor="robe_timer">
        <t> In RobE_TIMER, a new connection is initiated by sending a SYN+MP_CAPABLE along the initial path. If this path is functional, the solution will perform identical to classic MPTCP: the initial flow will be established, and subsequent flows can be created afterwards. If however the initial path is faulty, the retransmission will be triggered on another path. This path might circumvent the dysfunctional network, and allow the client to create an initial subflow. The first path is now seen as a subsequent path and the client sends SYN+MP_JOIN messages to create a subsequent flow.</t>
		<t> In high latency networks, the initial SYN+MP_CAPABLE might be delayed until the client retries on another path. Once the second SYN arrives at the server, it will try to complete the three-way handshake. If the first SYN was delayed by more than the retransmission time plus half a Round Trip Time (RTT) of the second path, it will arrive at the server after the second SYN. The server could now treat the segment as obsolete and drop it. </t>
		<t><figure title="The Robe_TIMER Solution" anchor=
		  "ref-timer"><artwork align="center"><![CDATA[
       Host A                                    Host B
------------------------                       ----------
Address A1    Address A2                       Address B1
----------    ----------                       ----------
    |             |                                |
    |            SYN + MP_CAPABLE(Key-A[*])        |
    |Timer---------------------------------------->|
    |             |   SYN + MP_CAPABLE(Key-A'[*])  |
    |             |------------------------------->|
    |             |   SYN/ACK+MP_CAPABLE(Key-B')   |
    |             |<-------------------------------|
    |             | ACK + MP_CAPABLE(Key-A',Key-B')|
    |             |------------------------------->|
    |             |   SYN + MP_JOIN(Token-B',R-A)  |
    |--------------------------------------------->|
    |   Subflow will be set up as normal MPTCP     |
    |                                              |	

     [*] Key-A in the first MP-capable is related to
       MPTCP v0 only and does not exist in MPTCP v1.
]]></artwork></figure></t>
        <t>Immediately after sending the ACK, subflows are established on the remaining paths as defined in <xref target="RFC6824"/> and <xref target="I-D.ietf-mptcp-rfc6824bis"/></t>
        <t>[Notes: How to set the Timer is TBD. If there is the case that the first SYN on default path arrives earlier than that from the second path, the MPTCP connection will be initialized on the path of the first SYN.The server could treat the second SYN as obsolete and drop it.]</t>		
      </section>
      <section title="Simultaneous Initial Paths Simple Version (RobE_SIM)" anchor="robe_sim">
	      <t>RobE_SIM is sender only implementation and no negotiation is required. In RobE_SIM, the MPTCP connection setup benefits from the fastest path. As shown in <xref target="ref_mptcp_robe_sim_signaling"/>, host A initiates the connection handshake on more than one path. The paths selected for RobE_SIM and referred to as potential initital flows can belong to the number of interfaces on the device or a subset selected on experience. When host A receives the first SYN/ACK back from host B, the path carrying this message is identified as the normal initial path. Host A sends then immediately a TCP RST message on any other path used for simultaneous connection setup for termination (break-before-make). The terminated ones are merged as subsequent subflows following the JOIN procedure in <xref target="RFC6824"/> and <xref target="I-D.ietf-mptcp-rfc6824bis"/>.</t>
		
		<t><figure title="MPTCP RobE_SIM Connection Setup" anchor=
		"ref_mptcp_robe_sim_signaling"><artwork align="center"><![CDATA[
         Host A                                  Host B
------------------------                       ----------
Address A1    Address A2                       Address B1
----------    ----------                       ----------
    |             |                                |
    |        SYN + MP_CAPABLE(Key-A[*])            |
    |--------------------------------------------->|
    |             |  SYN + MP_CAPABLE(Key-A'[*])   |
    |             |------------------------------->|
    |        SYN/ACK + MP_CAPABLE(Key-B)           |
    |<-------------------------------------------->|
    |             |  SYN/ACK + MP_CAPABLE(Key-B')  |
    |             |<-------------------------------|
    |        ACK + MP_CAPABLE(Key-A, Key-B)        |
    |--------------------------------------------->|
    |             |             RST                |
    |             |------------------------------->|
    |             |  SYN + MP_JOIN(Token-B,R-A)    |
    |             |------------------------------->| 
    |             |  MP_JOIN Process...            | 
    |             |                                | 

    [*] Key-A in the first MP-capable is related to
      MPTCP v0 only and does not exist in MPTCP v1.
]]></artwork></figure>
        </t>
		
      </section>
      <section title="Heuristic Initial Path Selection (RobE_IPS)" anchor="robe_ips">
        <section title="Architecture" anchor="arc_1">		
          <t><xref target="ref_ips_arc"/> provides the architecture for RobE_IPS and employs an "Initial Path Selection" logic which can be integrated into the MPTCP stack or exists as an isolated module in the terminal. The IPS logic has access to a set of transmission status information for each available path or its belonging netowrk interfaces. When an application starts a first communication, IPS selects based on the available path transmission characteristics the path with the highest probability to succeed.</t>
		  
		  <t><figure title="Architecture for Initial-path Selection" anchor=
		  "ref_ips_arc"><artwork align="center"><![CDATA[		  
+-------------------+              +-------------------+    
|     Terminal      |              |      Server       |       
|  +-------------+  |              |  +-------------+  |
|  |Application n|  |              |  |Application n|  |
|  +-------------+  |              |  +-------------+  |
|        |          |              |         |         |
|  +-------------+  |              |         |         |
|  |Initial-path |  |-------+      |         |         |
|  |  Selection  |  |       |      |         |         |
|  +-------------+  |       |      |         |         |         
|        |          |  +--------+  |         |         |       
|  +-------------+  |--|Internet|--|  +-------------+  |
|  | MPTCP Stack |  |--+--------+--|  | MPTCP Stack |  | 
|  +-------------+  |              |  +-------------+  |
+-------------------+              +-------------------+		       
]]></artwork></figure></t>   
        </section>
        <section title="Typical Scenarios" anchor="typical_flow_1">
          <t>Two typical RobE_IPS scenarios are presented in this section. <xref target="ref_mptcp_robe_ips_est"/> shows that the "Initial Path Selection" logic executed for each MPTCP connection establishment. On the other hand <xref target="ref_mptcp_robe_ips_default"/> describes that "Initial Path Selection" in case no path information are available. Considering the fact that no heuristics are given before a recent MPTCP connection was established, the default initial path can be adopted. Further combinations and implementations with more or less sophisticated heuristics are possible.</t>  		
          <t>
		  <figure title="RobE_IPS for each connection establishment" anchor=
		  "ref_mptcp_robe_ips_est"><artwork align="center"><![CDATA[    
     +---------------+                        
     |  Application  | 
     |    Request    |  			
     +---------------+          
             |
             V				  
     +---------------+   
+--->| Initial-path  |<---+
|    |   Selection   |    |
|    +---------------+    |      
|            |            |                     
|            V            |Info 		   
|    +---------------+    |
|    |  Set initial  |----+
|    |     path      |
|    |   for MPTCP   | 
|    +---------------+
|            |         		           
|            V			
|    +---------------+   
|No  |Establish MPTCP|
+----|  Connection   |
     +---------------+			
             |Yes         		           
             V			
]]></artwork>
         </figure>

         <figure title="RobE_IPS using default route when no meaningful heuristic available" anchor="ref_mptcp_robe_ips_default"><artwork align="center"><![CDATA[     
       +--------------+                        
       |  Application | 
       |    Request   |  			
       +--------------+          
               |
               V	
       +--------------+Yes                        
       |     First    |------------+
       |  Connection? |            |
       +--------------+            |
               |No                 |
               V                   |
       +--------------+            V
+----->| Initial-path |<-+     +-------+
|      |   Selection  |  |     |Default|
|      +--------------+  |     |initial|
|              |         |     |  path |
|              |         |     +-------+      
|              V         |Info     |
|      +--------------+  |         |
|      |  Set initial |--+         |
|      |     path     |            |
|      |   for MPTCP  |            |
|      +--------------+            |
|              |                   |     
|              V                   |
|No    +--------------+            |
+------|Successfully? |<-----------+
       +--------------+			
               |Yes         		           
               V			

          ]]></artwork>
		 </figure>

         <xref target="ref_mptcp_robe_ips_proc"/> shows the process flow of "Initial Path Selection". Upon a request from an application, the IPS logic will acquire transmission status information which represents the transmission performance of each available path or network interface and evaluate it. The transmission status information is characterized by at least one of the parameters: signal strength, throughput, round-trip time (RTT) and link success rate. In this way, the path with the best transmission performance can be determined and used for connection establishment.

         <figure title="Implementation process for Initial Path Selection" anchor=
		 "ref_mptcp_robe_ips_proc"><artwork align="center"><![CDATA[

             |	
             V				  
+---------------------------+                        
|Acquire transmission status| 
| info for available paths  |  			
+---------------------------+          
             |      
             V	
+---------------------------+                        
|   Evaluating the status   |
|    for available paths    |
+---------------------------+
             |No                 
             V                   
+---------------------------+            
| Determining an available  |   
|     path with better      | 
|      transmission         |
|      performance          |   
+---------------------------+     
             |             
             V      
+---------------------------+           
|     Using the network     | 
|         interface         |
|corrresponding to the path |
| with better transmission  | 
|performance for connection |
|       establishment       |
+---------------------------+            
             |                      
             V                   			
]]></artwork></figure>
          </t>  
        </section>
		
		<section title="Path decision information" anchor="path_decision_info">
		
		<t>
			The level of heuristic can be mainly divided into three layer: application level, transport-layer level and link-layer level based on the information acquisition method. For example, RTT can be calculated for each path within a MPTCP connection, an belongs thereofe to the transport-layer level.
			The transmission status information for each available path SHOULD be characterized by at least one of the parameters: signal strength, throughput, RTT and link success rate.
		Application level information are more seen for statistical purposes.</t>
				
	<t><list style="symbols"><t>Application level: application name, domain name, port number and location.</t>
		
			<t> Transport-layer level: RTT, CWND, Error rate.</t></list></t>		
		</section>
				
		<section title="Initial Path Selection use local RTT information" anchor="initial_path_selected_on_RTT">		
			<t><xref target="ref_mptcp_robe_ips_rtt"/> presents a "Initial Path Selection" logic based on RTT, e.g. assuming two paths over LTE and WiFi access. RTT calculation on the transport layer usually reflect the time when an information is sent and an related acknowledgment received. For an asymmetric usage (e.g. download only) of a communication it might happen that recent RTT calculation is only available on sender side which is possibly not the side which employs the IPS logic. A solution for this can be found in <xref target="robe_ips_ext"/>. Instead of using the most recent RTT value of a path a filtered value consisitng of several measured RTTs can be used. A RTT can also be derived from link layer information but may has a limited meaning when it does not picture the end-to-end latency.

		  <figure title="Initial-path Selection based on RTT" anchor=
		  "ref_mptcp_robe_ips_rtt"><artwork align="center"><![CDATA[    
+-------------------+                        
|    New Session    |  			
+-------------------+          
          |
          V	
+-------------------+ No                        
|Running Connections|-----------+
|(LTE.RTT<WiFi.RTT) |           |
+-------------------+           |
          |Yes                  |
          V                     V
+-------------------+   +----------------+    
|     Set LTE as    |   |   Set WiFi as  |
|    initial path   |   |  initial path  |
+-------------------+   +----------------+			
]]></artwork></figure>		  		  
		  </t>
        </section>
      </section>
	  <section title="Combination of RobE_SIM and RobE_IPS" anchor="comb_sim_and_ips">
	    <t>In an implementation, a single solution may not be sufficient to get an expected behavior. Combination of approaches to improve robustness is recommended therefore. <xref target="ref_mptcp_comb_robe_sim_ips"/> shows the combination of RobE_SIM and RobE_IPS. RobE_SIM can be used at the very beginning when the sender is absent of path information followed by RobE_IPS for consecutive connections.
		
		<figure title="Combination of RobE_SIM and RobE_IPS" anchor=
		"ref_mptcp_comb_robe_sim_ips"><artwork align="center"><![CDATA[    
       +--------------+                        
       |  Application | 
       |    Request   |  			
       +--------------+          
               |
               V				  
       +--------------+   
+----->| Any data for | No
|      | Initial Path |----------+
|      |  Selection?  |          |
|      +--------------+          |
|              |                 |
|              V                 V
|      +--------------+     +--------+
|      | Initial-path |     |RobE_SIM|
|      |  Selection   |<-+  +--------+
|      +--------------+  |       |
|              |         |       |   
|              V         |Info   |
|      +---------------+ |       |
|No    |Establish MPTCP|-+       |
+------|  Connection   |<--------+
       +---------------+			
               |         		           
               V
 No    +---------------+   
<------| Successfully? |
Network+---------------+
Problem        |Yes                    
               V				   
]]></artwork></figure>				
		</t>
	  </section>
	  <section title="Combination of RobE_TIMER and RobE_IPS" anchor="comb_timer_and_ips">
		  <t>Since RobE_IPS solely does not guarentee that session can be set up on the selection of initial path, it can also be combined with RobE_TIMER which generates less overhead compared to the combination with RobE_SIM in <xref target="comb_sim_and_ips"/> and guarantess session setup. RobE_TIMER can be introduced to optimize the control of path switching when the initial path selected by RobE_IPS is dysfunctional. When the system enables RobE_IPS and uses the selected initial path for session establishment,it sets the timer for path switching. When timer is expired, the system will change to another path to re-establish connection according to <xref target="robe_timer"/>. </t>
		<t><figure title="Combination of RobE_Timer and RobE_IPS" anchor=
		"ref_mptcp_comb_robe_timer_ips"><artwork align="center"><![CDATA[    
       +---------------+                        
       |  Application  | 
       |    Request    |  			
       +---------------+          
               |
               V				  
       +---------------+   
       |  Initial Path |
|----->|   Selection   |
|      | and Set Timer |          
|      +---------------+          
|              |                
|              V                 
|Yes   +---------------+     
+------| Timer is up?  |
       +---------------+       
               |No                 
               V           
       +---------------+        
       |Establish MPTCP|       
       |  Connection   |
       +---------------+			
               |         		           
               V
 No    +---------------+   
<------| Successfully? |
Network+---------------+
Problem        |Yes                    
               V				   
]]></artwork></figure></t>
	  </section>  
    </section>
    <section title="Implementation with Bi-directional Support" anchor="bi_impl">
      <section title="Simultaneous Initial Paths Extended Version (RobE_eSIM)" anchor="robe_ext">
        <t>RobE_eSIM extends RobE_SIM by reusing the potential initial flows. This eliminates the overhead from RobE_SIM with introducing new option MP_JOIN_CAP and accelerate the transmission speed by early availablity of multiple paths. Further it relaxes the dependency on a reliable third ACK of the 3-way handshake in MPTCP v1.</t>			
		<section title="RobE_eSIM Negotiation and Procedure" anchor="robe_ext_neg">
          <t>This section is used in the scenario that both sides support MPTCP and RobE_eSIM. Host A initiates connection on path A1->B1 and A2->B2 by SYN with a subtype set to RobE_eSIM_EN in addition to MPTCP_CAPABLE. The receiver returns SYN/ACK also with a RobE_eSIM_EN option if it supports RobE_eSIM. The path with first SYN/ACK will be selected as initial subflow. Host A sends the new MP_JOIN_CAP option on all the other subflows to immediately merge them with initial subflow.</t>
		  <t><figure title="MPTCP RobE_eSIM Connection Setup" anchor=
		     "ref_mptcp_robe_eSIM_signaling"><artwork align="center"><![CDATA[
         Host A                                        Host B
------------------------                             ----------
Address A1    Address A2                             Address B1
----------    ----------                             ----------
    |             |                                       |
    |      SYN+MP_CAPABLE+ROBE_eSIM_EN(Key-A[*])           |
    |---------------------------------------------------->|
    |             | SYN+MP_CAPABLE+ROBE_eSIM_EN(Key-A'[*]) |
    |             |-------------------------------------->|
    |      SYN/ACK+MP_CAPABLE+ROBE_eSIM_EN(Key-B)          |
    |<--------------------------------------------------->|
    |             | SYN/ACK+MP_CAPABLE+ROBE_eSIM_EN(Key-B')|
    |             |<--------------------------------------|
    |       ACK+MP_CAPABLE+ROBE_eSIM_EN(Key-A,Key-B)       |
    |---------------------------------------------------->|
    |             |                                       |  
    |             |  ACK+MP_JOIN_CAP(Key-A,HMAC)          |
    |             |-------------------------------------->| 
    |             |                                       | 

      [*] Key-A in the first MP-capable is related to
         MPTCP v0 only and does not exist in MPTCP v1.
]]></artwork></figure>
        </t>  
        </section>
		<section title="Protocol Adaptation" anchor="pro_adpt_1">
		  <section title="ROBE_eSIM_EN Option" anchor="robe_ext_en_opt">
			<t><figure title="ROBE_eSIM_EN_OPTION" anchor=
			"ref-robe-ext-en-option"><artwork align="center"><![CDATA[
                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+-------+-------+---------------+
|     Kind      |    Length     |Subtype|    (reserved)         |
+---------------+---------------+-------+-------+---------------+
]]></artwork></figure></t>			
          </section>
		  <section title="MP_JOIN_CAP Option" anchor="mp_join_cap_opt">
			<t><figure title="MP_JOIN_CAP" anchor="ref-mp-join-cap"><artwork><![CDATA[
                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+-------+-------+---------------+
|     Kind      |    Length     |Subtype|       |    ADDR_ID    |
+---------------+---------------+-------+-------+---------------+
|                    Sender's Key-A (64 bits)                   |
|                                                               |
|                                                               |
+---------------------------------------------------------------+
|                        HMAC (>=96 bits)                       |
|                                                               |
|                                                               |
:                                                               :
+---------------------------------------------------------------+
 Key-B_fast_hash = crc16(Key-B) & 0x3FF          -> (10bit)
 HMAC_keys =  HMAC(Key-A+Key-B+Key-B')           -> (>=96bit)
 HMAC =  (HMAC_keys & ~0x3FF) | Key-B_fast_hash  -> (size HMAC_keys)

]]></artwork></figure></t>
         <t>Computational effort on receiver side is most often expected to be the same as with MP_JOIN. Key-A ensures identification of related flows Key-B_fast_hash enables MP session even when selected initial flow is not fully established yet (slight computational overhead).HMAC authenticates relationship of initial and potential initital flows.</t>		
          </section>
        </section>
		<section title="Fallback Mechanism" anchor="fallback_1">		  
		  <section title="Fallback to MPTCP without RobE_eSIM" anchor="robe_fallback_1">
		    <t>This mechanism considers that both sides support MPTCP capability but the receiver does not equipped with RobE_eSIM. MPTCP session with RobE_eSIM negotiation will seamlessly fallback to normal MPTCP process.</t>
            <t><figure title="Fallback to MPTCP without RobE_eSIM" anchor=
		     "ref_fallback_1"><artwork align="center"><![CDATA[
          Host A                              Host B
------------------------                    ----------
Address A1    Address A2                    Address B1
----------    ----------                    ----------
    |             |                             |
    |      SYN+MP_CAPABLE+ROBE_eSIM_EN           |
    |------------------------------------------>|
    |             | SYN+MP_CAPABLE+ROBE_eSIM_EN  |
    |             |---------------------------->|
    |         SYN/ACK+MP_CAPABLE                |
    |<----------------------------------------->|
    |             |    SYN/ACK+MP_CAPABLE       |
    |             |<----------------------------|
    |       ACK+MP_CAPABLE                      |
    |------------------------------------------>|
    |             |          RST                |  
    |             |---------------------------->|
    |             |       SYN+MP_JOIN           |
    |             |---------------------------->| 
    |             |     MP_JOIN Process...      | 
    |             |                             |
]]></artwork></figure></t>			
          </section>
		  <section title="Fallback to Regular TCP" anchor="robe_fallback_2">
		  <t>When the receiver is not MPTCP enabled, MPTCP session with RobE_eSIM negotiation will seamlessly fallback to regular process which is illustrated in this section.</t>
		  		  
		  <t><figure title="Fallback to MPTCP without MPTCP" anchor=
		     "ref_fallback_2"><artwork align="center"><![CDATA[
          Host A                              Host B
------------------------                    ----------
Address A1    Address A2                    Address B1
----------    ----------                    ----------
    |             |                             |
    |      SYN+MP_CAPABLE+ROBE_eSIM_EN           |
    |------------------------------------------>|
    |             | SYN+MP_CAPABLE+ROBE_eSIM_EN  |
    |             |---------------------------->|
    |         SYN/ACK                           |
    |<----------------------------------------->|
    |             |    SYN/ACK                  |
    |             |<----------------------------|
    |           ACK                             |
    |------------------------------------------>|
    |             |          RST                |  
    |             |---------------------------->|
    |             |   Regular TCP Process...    | 
    |             |                             |
]]></artwork></figure></t>				
          </section>
        </section>
      	<section title="Security Consideration" anchor="sec_con_1">
          <t>[Tbd]</t>
        </section>
	  </section>
	  <section title="Heuristic Initial Path Selction with Server-RTT Measurement" anchor="robe_ips_ext">
		<section title="Description" anchor="Des">
          <t>Normally, path RTT can be determined by a time difference between sending a package and an ACK. For the asymmetric downloading service, the latest RTT for these subflows is calculated by data sender, i.e. application server and transformed to data receiver. Besides "latest RTT", algorithm for estimating the mean RTT by more than one RTT sent from data sender is also proposed. <xref target="ref_robe_ips_ext"/> presents the negotiation of this capability between both sides during session establishment when RobE_IPS is enabled on client.</t>
		  <t><figure title="robe_ips_with_server_rtt" anchor=
		     "ref_robe_ips_ext"><artwork align="center"><![CDATA[
        Host A                                Host B
------------------------                    ----------
Address A1    Address A2                    Address B1
----------    ----------                    ----------
    |             |                             |
    |           SYN+MP_CAPABLE+L_RTT_EN         |
    |------------------------------------------>|
    |         SYN/ACK+MP_CAPABLE+L_RTT_EN       |
    |<------------------------------------------|
    |               ACK+MP_CAPABLE              |
    |------------------------------------------>|
    |      ACK+DSS+L_RTT_EN(latest RTT)+Data    |
    |------------------------------------------>|
    |             |       SYN+MP_JOIN           |  
    |             |---------------------------->|
    |             |     MP_JOIN Process...      | 
    |             |                             |
]]></artwork></figure></t>
	  
        </section>
		<section title="Protocol Adaptation" anchor="pro_adpt_2">
          <t>Latest RTT calculated by server in asymmetry case should be transferred from server to client. So a new MPTCP subtype option named L_RTT is allocated for this function. During three-way handshake L_RTT field is used for negotiation of Server-RTT capability between client and server (in <xref target="Des"/>). When both part support the usage of Server-RTT, Latest RTT field is applied for carrying the value of latest RTT computed by server.</t>
			<t><figure title="ROBE_L_RTT_OPTION" anchor=
            "ref-robe-l-rtt-option"><artwork align="center"><![CDATA[
                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+-------+-------+---------------+
|     Kind      |    Length     |Subtype|     (reserved)        |
+---------------+---------------+-------+-------+---------------+
|                    Latest RTT (32 bits)                       |
|                                                               |
|                                                               |
+---------------------------------------------------------------+			
]]></artwork></figure></t>			  	  
        </section>
		<section title="Fallback Mechanism" anchor="fallback_2">
          <t>When the receiver is not L_RTT enabled, MPTCP session with L_RTT negotiation will seamlessly fallback to normal MPTCP process.</t>
		  <t><figure title="Fallback to MPTCP without RobE_IPS_eSIM" anchor=
		     "ref_robe_ips_ext_fallback_2"><artwork align="center"><![CDATA[
             Host A                           Host B
------------------------                    ----------
Address A1    Address A2                    Address B1
----------    ----------                    ----------
    |             |                             |
    |        SYN+MP_CAPABLE+L_RTT_EN            |
    |------------------------------------------>|
    |         SYN/ACK+MPTCP_CAPABLE             |
    |<------------------------------------------|
    |           ACK+MPTCP_CAPABLE               |
    |------------------------------------------>|
    |             |         SYN+MP_JOIN         |  
    |             |---------------------------->|
    |             |       MP_JOIN Process...    | 
    |             |                             |
]]></artwork></figure></t>	  
        </section>
		<section title="Security Consideration" anchor="sec_con_2">
          <t>[Tbd]</t>
        </section>
      </section>
    </section>
    <section title="IANA Considerations" anchor="iana">
	    <t>This document defines three new values to MPTCP Option Subtype as following. </t>
	    <texttable style="all" title="RobE Option Subtypes" anchor="table_robe_options">
        <ttcol>Value</ttcol>
        <ttcol>Symbol</ttcol>
        <ttcol>Name</ttcol>
        <ttcol>Reference</ttcol>
        <c>TBD</c>
        <c>ROBE_eSIM_EN</c>
        <c>RobE_eSIM enabled</c>
        <c>Section 3.1</c>
        <c>TBD</c>
		<c>MP_JOIN_CAP</c>
        <c>Join connection directly in RobE_eSIM</c>
        <c>Section 3.1</c>
        <c>TBD</c>
        <c>L_RTT_EN</c>
        <c>Server RTT enabled</c>
		<c>Section 3.2</c>
        <postamble>RobE Option Subtypes</postamble>        
      </texttable>	  
    </section>
  </middle>
  <back>
    <references title="Informative References">
	&I-D.ietf-mptcp-rfc6824bis;
	&RFC0793;
	&RFC6824;
	</references>
  </back>
</rfc>
